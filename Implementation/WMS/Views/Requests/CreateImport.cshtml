@model WMS.Models.ImportRequest

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Import Request</h4>
<hr />
<div class="row">
    <div class="col">
        <form>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" style="display: inline-block">
                <label asp-for="StorageSpaceId" class="control-label"></label>
                <select asp-for="StorageSpaceId" class="form-control" style="max-width: 240px" asp-items="ViewBag.StorageSpace"></select>
                <span asp-validation-for="StorageSpaceId" class="text-danger"></span>
            </div>
            <div class="form-group" style="display: inline-block">
                <input type="submit" value="Create" onclick="submitRequest" class="btn btn-primary" />
            </div>
            <div class="form-group">
                <select class="form-control" style="display: inline-block; max-width: 240px" id="itemDetailsSelect">
                    <option disabled selected value="-1">Select an item</option>
                </select>
                <input class="form-control" style="display: inline-block; max-width: 240px" id="countSelect" type="number" step="1" min="1" value="0" />
                <input type="button" id="addItemButton" class="btn btn-primary" value="Add Item">
            </div>
        </form>
        <hr />
        <div id="table">

        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script type="text/javascript">

let itemDetailsSelect = document.getElementById("itemDetailsSelect");
let addItemButton = document.getElementById("addItemButton");
let countSelect = document.getElementById("countSelect");
let table = document.getElementById("table");
let allItems = [];
let chosenItems = [];

addItemButton.addEventListener("click", e => {
    // e.preventDefault();
    addItem();
});


let url = "https://ooad19team7api.azurewebsites.net/api/itemdetails";
fetch(url).then(res => {
    res.json().then(data => {
        allItems = data;
        loadToSelect();
    })
}).catch(err => {
    console.log(err)
})

function loadToSelect() {
    for (let item of allItems) {
        itemDetailsSelect.innerHTML += `<option value="${item["upc"]}">${item["name"]}</option>`;
    }
}

function addItem() {
    if (itemDetailsSelect.value == -1)
        return;

    const data = { count: countSelect.value, upc: itemDetailsSelect.value, name: itemDetailsSelect.options[itemDetailsSelect.selectedIndex].text };
    let index = chosenItems.findIndex(item => item.upc == data.upc);
    if (index == -1)
        chosenItems.push(data);
    else
        chosenItems[index].count = new Number(data.count);

    updateTable();
}

function updateTable() {
    table.innerHTML = "";
    for (let item of chosenItems) {
        table.innerHTML += `${item.name} - ${item.count} <input type="button" onclick="removeItem('${item.upc}')" class="btn btn-danger" value="Remove"> <br/>`;
    }
}

function removeItem(upc) {
    chosenItems = chosenItems.filter(item => item.upc != upc);
    updateTable();
}

function submitRequest() {
    let data = {};
    data.id = null;
    data.requestDate = "";
    data.firmId = "@Model.Firm.Id";
    data.processed = false;
    data.discriminator = "ImportRequest";
    data.itemCounts = "";
}

</script>
}

@* 
{
    "id": "2b",
    "requestDate": "2014-06-23T00:00:00",
    "firmId": "0fa538bb-0cb2-4c42-8e18-1d2c40ad9377",
    "processed": false,
    "storageSpaceId": "60c883c1-4554-4976-b93a-e2335b231b72",
    "discriminator": "ImportRequest",
    "firm": null,
    "storageSpace": null,
    "itemCounts": []
}    
*@
